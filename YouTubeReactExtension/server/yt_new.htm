<!DOCTYPE html>
<!-- To interface with SuperMemo you must preserve these properties and fields when editing yt_new.htm:
    - the order of INPUT fields (these are used by SuperMemo to collect extract boundaries)
    - SELECT and OPTION fields for generating extracts
    - INPUT field with YouTube video ID substituted by SuperMemo (id="videoid")
    - INPUT field that determines the position of video start and end (id="startvideoat" and id="stopvideoat")(must be "0:00:00")
    see: https://help.supermemo.org/wiki/Incremental_video#Your_own_incremental_video_script
    Symptoms of failure to do this: extract start nd stop times are rotated incorrctly (start becomes stop)
-->
<html>
    <head>
    <meta http-equiv="content-type" content="text/html; charset=windows-1252">
        <meta content="IE=11.0000" http-equiv="X-UA-Compatible">
        <style type="text/css">
            body, div, h4, p, input, select {
                margin: 0;
                padding: 0;
            }
            
            /* body {
                background-color: rgb(20,30, 1);
            } */

            img {
                margin: 0 2px;
            }

            #ga {
                display: none;
            }

            #feedbackOuter {
                margin: 5px;
                display: none;
                width: 415px;
                text-align: center;
            }

            .img-yellow-message-top-cap, .img-yellow-message-bottom-cap {
                height: 4px;
                font-size: 0;
            }

            .img-yellow-message-top-cap {
                background: transparent url(http://localhost:8000/iv/images/icons.png) no-repeat 0 -32px;
            }

            .left-right-border-yellow {
                border-left: 1px solid #F5E082;
                border-right: 1px solid #F5E082;
                background-color: #FFFFE5;
            }

            .img-yellow-message-bottom-cap {
                background: transparent url(http://localhost:8000/iv/images/icons.png) no-repeat 0 -36px;
            }

            #feedbackInner {
                padding: 5px;
                text-align: left;
            }

            h4 {
                padding-left: 17px;
                background: transparent url(http://localhost:8000/iv/images/icons.png) no-repeat -401px 1px;
            }

            .bd {
                margin: 5px 0;
            }

            .ft {
                text-align: center;
            }

            .email {
                background: transparent url(http://localhost:8000/iv/images/icons.png) no-repeat 0 0;
            }

            fieldset {
                padding: 5px;
                border: none;
                display: block;
                width: 800px;
            }

            p {
                margin: 0;
                padding: 0;
            }

            .ctrlGrp {
                border-top: 1px solid #808080;
                clear: both;
            }

            .ctrlSubgrp {
                padding: 5px;
                border-left: 1px solid #808080;
                float: left;
            }

            .firstCtrlGrp, .firstCtrlSubgrp {
                border: none;
            }

            .debug {
                font-size: xx-small;
            }

            .repeat {
                float: left;
                height: 3.6em;
            }

            #repeat {
                width: 1em;
                display: inline-block;
            }

            button, input {
                width: 5em;
            }

            .checkbox {
                width: auto;
            }

            select, #extractName {
                width: 15em;
            }

            a span {
                height: 16px;
                width: 16px;
                font-size: 0;
            }

            .ctrlGrp label {
                display: block;
                width: auto;
                background: transparent url(http://localhost:8000/iv/images/icons.png) no-repeat -254px 0;
            }

            .imgBtn {
                border: 0;
                width: 16px;
                vertical-align: text-top;
            }

            .rewind {
                background: transparent url(http://localhost:8000/iv/images/icons.png) no-repeat -16px 0;
            }

            .forward {
                background: transparent url(http://localhost:8000/iv/images/icons.png) no-repeat -32px 0;
            }

            .goTo {
                background: transparent url(http://localhost:8000/iv/images/icons.png) no-repeat -48px 0;
            }

            .restoreStartAt {
                background: transparent url(http://localhost:8000/iv/images/icons.png) no-repeat -64px 0;
            }

            .restoreStopAt {
                background: transparent url(http://localhost:8000/iv/images/icons.png) no-repeat -80px 0;
            }

            .removeCurrentExtract {
                background: transparent url(http://localhost:8000/iv/images/icons.png) no-repeat -96px 0;
            }
			
			.videoWrapper {
				position: relative;
				padding-bottom: 56.25%; /* 16:9 */
				padding-top: 25px;
				height: 0;
			}
			.videoWrapper iframe {
				position: absolute;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
			}
        </style>
        <link href="http://localhost:8000/scripts/container.css" type="text/css" rel="stylesheet" />
    </head>
    <body class="yui-skin-sam">
        <div id="customPrompt">
            <div class="hd">Save As</div>
            <div class="bd">
                <form name="promptForm" id="promptForm">
                    <label for="extractName">Extract name: </label>
                    <input type="text" name="extractName" id="extractName" onfocus="this.select();" onblur="oCustomPrompt.focusFirstButton();" />
                </form>
            </div>
        </div>
        <div id="feedbackOuter">
            <div class="img-yellow-message-top-cap"></div>
            <div class="left-right-border-yellow">
                <div id="feedbackInner"></div>
            </div>
            <div class="img-yellow-message-bottom-cap"></div>
        </div>
        <div class="videoWrapper">
			<div id="bideo"></div>
		</div>
        <input type="hidden" value="zzzYT-IDzzz" id="videoid" />
        <input type="hidden" value="1" id="imposeboundries" />
        <fieldset>      
            <div class="ctrlGrp firstCtrlGrp">
                <div class="ctrlSubgrp firstCtrlSubgrp">
                    <p>
                        <button type="button" id="mark" onclick="setAt('resume', 0, true);"> [ Mark ]</button>
                        <img src="http://localhost:8000/iv/images/transparent.png" alt="" id="rewindResume" class="imgBtn rewind" onclick="move('resume', 'rewind');" />
                        <img src="http://localhost:8000/iv/images/transparent.png" alt="Go to" title="Go to" id="resume" class="imgBtn goTo" onclick="goTo('resume');" />
                        <img src="http://localhost:8000/iv/images/transparent.png" alt="" id="forwardResume" class="imgBtn forward" onclick="move('resume', 'forward');" />
						<input type="textarea" value="0:00:00" id="resumevideoat" onfocus="this.select();" ondblclick="resetAt('resume');" onchange="this.value = convertDuration2HHMMSS(convertHHMMSS2Duration(this.value));" onclick="setAt('resume', 0, true);" onscroll="console.log('scroll');"/>
						<img src="http://localhost:8000/iv/images/transparent.png" alt="Restore default" title="Restore default" id="restoreResumeAt" class="imgBtn restoreStartAt" onclick="resetAt('resume');" /> 
                    </p>
                </div>
                <div class="ctrlSubgrp secondCtrlSubgrp">
                    <button type="button" id="start" onclick="setAt('start', 0, true);" title="Set clip start">[</button>
                    <img src="http://localhost:8000/iv/images/transparent.png" alt="" id="rewindStart" class="imgBtn rewind" onclick="move('start', 'rewind');" />
                    <img src="http://localhost:8000/iv/images/transparent.png" alt="Go to" title="Go to" id="goToStart" class="imgBtn goTo" onclick="goTo('start');" />
                    <img src="http://localhost:8000/iv/images/transparent.png" alt="" id="forwardStart" class="imgBtn forward" onclick="move('start', 'forward');" />
                    <input type="text" value="0:00:00" id="startvideoat" onfocus="this.select();" onchange="this.value = convertDuration2HHMMSS(convertHHMMSS2Duration(this.value)); var that = this; imposeBoundaries(0, that);" onclick="setAt('start', 0, true);this.select();" ondblclick="resetAt('start');this.select();" />
                    <img src="http://localhost:8000/iv/images/transparent.png" alt="Restore default" title="Restore default" id="restoreStartAt" class="imgBtn restoreStartAt" onclick="resetAt('start');" />
                    ~
                    <img src="http://localhost:8000/iv/images/transparent.png" alt="Restore default" title="Restore default" id="restoreStopAt" class="imgBtn restoreStopAt" onclick="resetAt('stop');" />
                    <input type="text" value="0:00:00" id="stopvideoat" onfocus="this.select();" onchange="this.value = convertDuration2HHMMSS(convertHHMMSS2Duration(this.value)); var that = this; imposeBoundaries(0, that);" onclick="setAt('stop', 0, true);this.select();" ondblclick="resetAt('stop');" />
                    <img src="http://localhost:8000/iv/images/transparent.png" alt="" id="rewindStop" class="imgBtn rewind" onclick="move('stop', 'rewind');" />
                    <img src="http://localhost:8000/iv/images/transparent.png" alt="Go to" title="Go to" id="goToStop" class="imgBtn goTo" onclick="goTo('stop');" />
                    <img src="http://localhost:8000/iv/images/transparent.png" alt="" id="forwardStop" class="imgBtn forward" onclick="move('stop', 'forward');" />
                    <button type="button" id="stop" onclick="setAt('stop', 0, true);" title="Set clip end">]</button>
                </div>
            </div>
            <div class="ctrlGrp secondCtrlGrp">
                <div class="ctrlSubgrp firstCtrlSubgrp">
                    <p>
                        <input type="checkbox" checked="checked" id="repeat" class="checkbox" />
                        <label for="repeat" id="repeat" title="Repeat (R)">&nbsp;</label>
                    </p>
                </div>
                <div class="ctrlSubgrp secondCtrlSubgrp">
                    <p>
                        <button type="button" id="test" onclick="testExtract();">Test</button>
                        <button type="button" id="reset" onclick="resetExtract();">Reset</button>
                        <button type="button" id="extract" onclick="addExtract(0);">Extract</button>
                        <select id="extracts" onchange="feedCurrentExtract();" onclick="feedCurrentExtract();"></select>
                        <img src="http://localhost:8000/iv/images/transparent.png" alt="Remove the currently selected extract" id="removeCurrentExtract" class="imgBtn removeCurrentExtract" onclick="removeCurrentExtract();" />
                    </p>
                </div>
                <div class="ctrlSubgrp thirdCtrlSubgrp">
                    <p>
                        <button type="button" class="wsenable" id="back" onclick="prevElement();" disabled>&lt;--</button>
                        <button type="button" class="wsenable" id="learn" onclick="beginLearning();" disabled>Learn</button>
                        <button type="button" class="wsenable" id="rep" onclick="nextRep();" disabled>Rep</button>
                        <button type="button" class="wsenable" id="fwd" onclick="nextElement();" disabled>--&gt;</button>
                    </p>
                </div>
            </div>
            <div class="ctrlGrp">
                <div class="ctrlSubgrp">
                    <p>
                        <button type="button" class="wsenable" id="dismiss" onclick="dismissElement();" disabled>Dismiss</button>
                    </p>
                </div>
                <div class="ctrlSubgrp">
                    <p>
                        <button type="button" class="" id="extractm5" onclick="addExtract(-5)">Extr. &lt;-5</button>
                        <button type="button" class="" id="extract5" onclick="addExtract(5)">Extr. 5+&gt;</button>
                    </p>
                </div>
            </div>  
            <!-- <button type="button" id="scloud" onclick="loadSoundcloudPlayer();">Soundcloud</button> -->
            <!-- <button type="button" id="vyp" onclick="loadVidyardPlayer();">Vidyard</button> -->
            <!-- <button type="button" id="rawmp4" onclick="loadRawPlayer();">MP4</button> -->
            <!-- <button type="button" id="edge" onclick="openEdge();">Edge</button> -->

            <!-- <button type="button" id="test" onclick="nextElement();">Fwd</button> -->

			<div class="ctrlGrp">
                <textarea id="log" style="width: 100%"></textarea>
			</div>
            <div class="ctrlGrp">
                <div class="ctrlSubgrp firstCtrlSubgrp debug">Date: Nov 29, 2017</div>
            </div>
			<input type="hidden" value="0" id="customPromptVisible" />
        </fieldset>
        <div id="speedSlider" style="z-index:2;">
        <form>
        <div>
            <input 
            type="range" 
            min=-10
            max=10
            value=0
            id="fader"
            step=1
            onchange="outputUpdate(value)"
            >
            <span for=fader id=speed>1</span>
        </div>
        </form>
        </div>
        <script src="http://localhost:8000/react-extension.js"></script>

        <!-- YAHOO -->
        <script type="text/javascript" src="http://localhost:8000/scripts/container-min.js" defer onload="setTimeout(loadBindings,0)"></script>
        
        <!-- http://cdn.jsdelivr.net/npm/promise-polyfill@8/dist/polyfill.min.js -->
        <script src="http://localhost:8000/scripts/polyfill.min.js"></script>

        <!-- <script src="http://localhost:8000/scripts/simple-jsonrpc-js.min.js"></script> -->
        <script src="https://cdn.privex.io/lib/simple-jsonrpc/master/simple-jsonrpc-js.min.js"></script>

        <!-- add support for thumbnail frame fetching, TODO -->
        <!-- <script type="text/javascript" src='http://github.com/github/fetch/releases/download/v3.4.1/fetch.umd.js'></script> -->

        <!-- http://unpkg.com/react-player/dist/ReactPlayer.standalone.js -->
        <script type="text/javascript" src='http://localhost:8000/scripts/ReactPlayer.standalone.js' async onload="setTimeout(loadPlayer,0, true)"></script>
    </body>
</html>
